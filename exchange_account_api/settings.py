"""
Django settings for exchange_account_api project.

Generated by 'django-admin startproject' using Django 4.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os
from datetime import timedelta
from rest_framework.settings import api_settings

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = not (os.getenv('API_ENV') == 'production' or os.getenv('API_ENV') == 'prod')
# DEBUG = False

if os.getenv('ALLOWED_HOSTS') is None:
    ALLOWED_HOSTS = []
else:
    ALLOWED_HOSTS = (os.getenv('ALLOWED_HOSTS')).split(',')

# Application definition

INSTALLED_APPS = [
    'daphne',
    'ws',
    'channels',

    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'libs_account',
    'libs_log',
    'libs_mail',
    'libs_webhook',

    'rest_framework',
    'corsheaders',
    'wallet',
    'account',
    'log',
    'knox',
    'position'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'exchange_account_api.HistoryMiddleware.history_middleware',
    'libs_exchange_auth.middleware.ExchangeAuthMiddleware',
]
#
AUTH_USER_MODEL = 'libs_account.Account'

ROOT_URLCONF = 'exchange_account_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'exchange_account_api.wsgi.application'
ASGI_APPLICATION = 'exchange_account_api.asgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DATABASE_NAME'),
        'HOST': os.getenv('DATABASE_HOST'),
        'PORT': '3306',
        'USER': os.getenv('DATABASE_USER'),
        'PASSWORD': os.getenv('DATABASE_PASS'),
    },
    'replica1': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DATABASE_NAME'),
        'HOST': os.getenv('DATABASE_RO_HOST'),
        'PORT': '3306',
        'USER': os.getenv('DATABASE_USER'),
        'PASSWORD': os.getenv('DATABASE_PASS'),
    },
    'community': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DATABASE_OG_NAME'),
        'HOST': os.getenv('DATABASE_OG_RO_HOST'),
        'PORT': '3306',
        'USER': os.getenv('DATABASE_OG_USER'),
        'PASSWORD': os.getenv('DATABASE_OG_PASS'),
    },
    'geo': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DATABASE_GEO_NAME'),
        'HOST': os.getenv('DATABASE_GEO_RO_HOST'),
        'PORT': '3306',
        'USER': os.getenv('DATABASE_GEO_USER'),
        'PASSWORD': os.getenv('DATABASE_GEO_PASS'),
    }
}

DATABASE_ROUTERS=['exchange_account_api.router.CommunityRouter', 'exchange_account_api.router.ReplicaRouter']

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': ('libs_exchange_auth.TokenAuthentication.TokenAuthentication',),
    'EXCEPTION_HANDLER': 'libs_exchange_handler.og_exception.og_exception_handler',
}

REST_KNOX = {
  'SECURE_HASH_ALGORITHM': 'cryptography.hazmat.primitives.hashes.SHA512',
  'AUTH_TOKEN_CHARACTER_LENGTH': 64,
  'TOKEN_TTL': timedelta(hours=10),
  'USER_SERIALIZER': 'account.serializers.UserSerializer',
  'TOKEN_LIMIT_PER_USER': None,
  'EXPIRY_DATETIME_FORMAT': api_settings.DATETIME_FORMAT,
}

# CORS
CORS_ALLOWED_ORIGINS = (os.getenv('CROS_HOST')).split(',')
CORS_ALLOW_HEADERS = ( 
    "accept",
    "authorization",
    "content-type",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "Accepted-Language",
    "Access-Control-Allow-Origin",
    'X-Auth-Base',
    'X-Auth-Access',
    'Di'
)

# Channels
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [(os.getenv('REDIS_HOST'), 6379)],
        },
    },
}